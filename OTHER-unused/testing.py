import config
#import RBX_Cube
#import RBX_Solve
print(config.PLLSEQ[0][1])
print(config.PLLSEQ[1][1])
print(config.PLLSEQ[2][1])
print(config.PLLSEQ[3][1])

OLDPLLSEQ = [[[[0, 2, 2], [2, 2, 2], [0, 2, 2], [2, 0, 1], [0, 2, 0], [2, 2, 0], [0, 2, 2], [2, 0, 1], [0, 2, 1]], [[0, 2, 0], [2, 0, 2], [0, 2, 0], [2, 2, 1], [0, 2, 2], [2, 0, 0], [0, 2, 0], [2, 2, 1], [0, 2, 1]], [[0, 2, 1], [1, 2, 0], [0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 2], [1, 2, 2], [0, 2, 2], [1, 2, 0], [0, 2, 2]], [[0, 2, 0], [1, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 0], [1, 2, 0], [0, 2, 0], [1, 2, 2], [0, 2, 2], [1, 2, 2], [0, 2, 1]], [[0, 0, 1], [0, 2, 1], [1, 0, 2], [0, 0, 1], [0, 2, 1], [1, 2, 1], [0, 0, 1], [0, 2, 1], [1, 0, 2], [0, 0, 1], [0, 2, 1]], [[0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 2], [2, 2, 2], [0, 2, 1], [1, 2, 2], [0, 2, 2], [1, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 2], [2, 2, 0]], [[0, 2, 2], [1, 2, 0], [0, 0, 0], [1, 2, 1], [0, 2, 0], [1, 2, 2], [0, 2, 2], [1, 2, 1], [0, 2, 0], [0, 0, 2], [1, 2, 2]], [[0, 2, 0], [1, 2, 0], [0, 2, 2], [2, 2, 0], [0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 2], [2, 2, 2], [0, 2, 1], [1, 2, 2], [0, 2, 2], [1, 2, 2]], [[0, 0, 2], [1, 2, 1], [0, 0, 0], [1, 2, 1], [0, 0, 2], [2, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 2], [1, 2, 0], [0, 0, 2], [2, 2, 2], [0, 0, 1], [1, 2, 0]], [[0, 2, 2], [1, 2, 1], [0, 2, 0], [1, 2, 1], [0, 2, 2], [2, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 2], [2, 2, 0], [0, 2, 1], [1, 2, 2]], [[0, 2, 2], [1, 2, 0], [0, 2, 2], [1, 2, 2], [2, 0, 2], [0, 2, 2], [2, 0, 1], [1, 2, 2], [2, 0, 2], [1, 2, 0], [2, 0, 2], [0, 2, 0], [2, 0, 0], [0, 2, 0]], [[0, 2, 1], [1, 0, 2], [2, 0, 2], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 0], [1, 0, 0], [0, 2, 1], [2, 2, 0], [1, 2, 0], [2, 2, 2]], [[0, 2, 2], [1, 2, 2], [0, 2, 0], [2, 0, 1], [1, 0, 2], [0, 0, 0], [1, 2, 0], [0, 0, 2], [1, 2, 2], [0, 0, 2], [1, 0, 0], [2, 0, 1]], [[0, 2, 1], [1, 0, 0], [2, 2, 2], [1, 2, 2], [2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 0, 2], [0, 2, 1], [2, 0, 0], [1, 2, 2], [2, 0, 2]], [[0, 2, 0], [1, 2, 0], [0, 2, 2], [2, 2, 1], [1, 0, 0], [0, 0, 2], [1, 2, 2], [0, 0, 0], [1, 2, 0], [0, 0, 0], [1, 0, 2], [2, 2, 1]], [[0, 2, 2], [1, 2, 1], [0, 2, 2], [1, 2, 2], [2, 0, 2], [0, 2, 2], [2, 0, 1], [1, 2, 2], [2, 0, 2], [1, 2, 0], [2, 0, 2], [0, 2, 0], [2, 0, 0], [1, 2, 2], [0, 2, 0]], [[0, 0, 1], [0, 2, 1], [1, 0, 2], [0, 0, 1], [0, 2, 1], [1, 2, 0], [0, 0, 2], [0, 2, 2], [2, 2, 1], [0, 0, 1], [0, 2, 1], [2, 0, 1], [0, 0, 2], [0, 2, 2], [1, 2, 1]], [[2, 2, 2], [0, 2, 0], [1, 2, 2], [0, 2, 2], [1, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 2], [2, 2, 0], [0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 2], [2, 2, 2], [0, 2, 0], [2, 2, 0]], [[0, 0, 2], [1, 2, 2], [0, 2, 0], [1, 2, 1], [0, 0, 0], [1, 2, 0], [0, 2, 2], [0, 0, 2], [1, 2, 2], [0, 2, 0], [1, 2, 1], [0, 0, 0], [1, 2, 0], [0, 2, 2], [1, 2, 0]], [[0, 2, 2], [1, 2, 0], [0, 0, 0], [1, 2, 1], [0, 2, 0], [1, 2, 2], [0, 0, 2], [0, 2, 2], [1, 2, 0], [0, 0, 0], [1, 2, 1], [0, 2, 0], [1, 2, 2], [0, 0, 2], [1, 2, 2]], [[0, 2, 0], [2, 0, 2], [0, 2, 2], [2, 2, 2], [0, 2, 0], [2, 0, 0], [0, 2, 2], [2, 2, 1], [0, 0, 0], [2, 2, 2], [0, 0, 2], [2, 0, 0], [0, 0, 0], [2, 2, 0], [0, 0, 2]], [[0, 2, 0], [2, 0, 2], [0, 2, 2], [2, 2, 2], [0, 2, 0], [2, 0, 0], [0, 2, 2], [2, 2, 0], [0, 2, 0], [2, 0, 0], [0, 2, 2], [2, 2, 2], [0, 2, 0], [2, 0, 2], [0, 2, 2], [2, 2, 0]]],[[[2, 0, 2], [0, 2, 0], [2, 0, 2], [0, 0, 1], [2, 0, 0], [0, 2, 2], [2, 0, 2], [0, 0, 1], [2, 0, 1]], [[2, 0, 0], [0, 0, 0], [2, 0, 0], [0, 2, 1], [2, 0, 2], [0, 0, 2], [2, 0, 0], [0, 2, 1], [2, 0, 1]], [[2, 0, 1], [1, 2, 0], [2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 2], [1, 2, 2], [2, 0, 2], [1, 2, 0], [2, 0, 2]], [[2, 0, 0], [1, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 0], [1, 2, 0], [2, 0, 0], [1, 2, 2], [2, 0, 2], [1, 2, 2], [2, 0, 1]], [[2, 2, 1], [2, 0, 1], [1, 0, 2], [2, 2, 1], [2, 0, 1], [1, 2, 1], [2, 2, 1], [2, 0, 1], [1, 0, 2], [2, 2, 1], [2, 0, 1]], [[2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 2], [0, 2, 0], [2, 0, 1], [1, 2, 2], [2, 0, 2], [1, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 2], [0, 2, 2]], [[2, 0, 2], [1, 2, 0], [2, 2, 0], [1, 2, 1], [2, 0, 0], [1, 2, 2], [2, 0, 2], [1, 2, 1], [2, 0, 0], [2, 2, 2], [1, 2, 2]], [[2, 0, 0], [1, 2, 0], [2, 0, 2], [0, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 2], [0, 2, 0], [2, 0, 1], [1, 2, 2], [2, 0, 2], [1, 2, 2]], [[2, 2, 2], [1, 2, 1], [2, 2, 0], [1, 2, 1], [2, 2, 2], [0, 2, 2], [2, 2, 0], [1, 2, 2], [2, 2, 2], [1, 2, 0], [2, 2, 2], [0, 2, 0], [2, 2, 1], [1, 2, 0]], [[2, 0, 2], [1, 2, 1], [2, 0, 0], [1, 2, 1], [2, 0, 2], [0, 2, 0], [2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 2], [0, 2, 2], [2, 0, 1], [1, 2, 2]], [[2, 0, 2], [1, 2, 0], [2, 0, 2], [1, 2, 2], [0, 0, 0], [2, 0, 2], [0, 0, 1], [1, 2, 2], [0, 0, 0], [1, 2, 0], [0, 0, 0], [2, 0, 0], [0, 0, 2], [2, 0, 0]], [[2, 0, 1], [1, 0, 2], [0, 0, 0], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 2], [1, 0, 0], [2, 0, 1], [0, 2, 2], [1, 2, 0], [0, 2, 0]], [[2, 0, 2], [1, 2, 2], [2, 0, 0], [0, 0, 1], [1, 0, 2], [2, 2, 0], [1, 2, 0], [2, 2, 2], [1, 2, 2], [2, 2, 2], [1, 0, 0], [0, 0, 1]], [[2, 0, 1], [1, 0, 0], [0, 2, 0], [1, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 2], [1, 0, 2], [2, 0, 1], [0, 0, 2], [1, 2, 2], [0, 0, 0]], [[2, 0, 0], [1, 2, 0], [2, 0, 2], [0, 2, 1], [1, 0, 0], [2, 2, 2], [1, 2, 2], [2, 2, 0], [1, 2, 0], [2, 2, 0], [1, 0, 2], [0, 2, 1]], [[2, 0, 2], [1, 2, 1], [2, 0, 2], [1, 2, 2], [0, 0, 0], [2, 0, 2], [0, 0, 1], [1, 2, 2], [0, 0, 0], [1, 2, 0], [0, 0, 0], [2, 0, 0], [0, 0, 2], [1, 2, 2], [2, 0, 0]], [[2, 2, 1], [2, 0, 1], [1, 0, 2], [2, 2, 1], [2, 0, 1], [1, 2, 0], [2, 2, 2], [2, 0, 2], [0, 2, 1], [2, 2, 1], [2, 0, 1], [0, 0, 1], [2, 2, 2], [2, 0, 2], [1, 2, 1]], [[0, 2, 0], [2, 0, 0], [1, 2, 2], [2, 0, 2], [1, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 2], [0, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 2, 2], [2, 0, 2], [0, 2, 0], [2, 0, 0], [0, 2, 2]], [[2, 2, 2], [1, 2, 2], [2, 0, 0], [1, 2, 1], [2, 2, 0], [1, 2, 0], [2, 0, 2], [2, 2, 2], [1, 2, 2], [2, 0, 0], [1, 2, 1], [2, 2, 0], [1, 2, 0], [2, 0, 2], [1, 2, 0]], [[2, 0, 2], [1, 2, 0], [2, 2, 0], [1, 2, 1], [2, 0, 0], [1, 2, 2], [2, 2, 2], [2, 0, 2], [1, 2, 0], [2, 2, 0], [1, 2, 1], [2, 0, 0], [1, 2, 2], [2, 2, 2], [1, 2, 2]], [[2, 0, 0], [0, 0, 0], [2, 0, 2], [0, 2, 0], [2, 0, 0], [0, 0, 2], [2, 0, 2], [0, 2, 1], [2, 2, 0], [0, 2, 0], [2, 2, 2], [0, 0, 2], [2, 2, 0], [0, 2, 2], [2, 2, 2]], [[2, 0, 0], [0, 0, 0], [2, 0, 2], [0, 2, 0], [2, 0, 0], [0, 0, 2], [2, 0, 2], [0, 2, 2], [2, 0, 0], [0, 0, 2], [2, 0, 2], [0, 2, 0], [2, 0, 0], [0, 0, 0], [2, 0, 2], [0, 2, 2]]],[[[0, 0, 0], [2, 0, 0], [0, 0, 0], [2, 2, 1], [0, 0, 2], [2, 0, 2], [0, 0, 0], [2, 2, 1], [0, 0, 1]], [[0, 0, 2], [2, 2, 0], [0, 0, 2], [2, 0, 1], [0, 0, 0], [2, 2, 2], [0, 0, 2], [2, 0, 1], [0, 0, 1]], [[0, 0, 1], [1, 2, 0], [0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 0], [1, 2, 2], [0, 0, 0], [1, 2, 0], [0, 0, 0]], [[0, 0, 2], [1, 2, 2], [0, 0, 2], [1, 2, 0], [0, 0, 2], [1, 2, 0], [0, 0, 2], [1, 2, 2], [0, 0, 0], [1, 2, 2], [0, 0, 1]], [[0, 2, 1], [0, 0, 1], [1, 0, 2], [0, 2, 1], [0, 0, 1], [1, 2, 1], [0, 2, 1], [0, 0, 1], [1, 0, 2], [0, 2, 1], [0, 0, 1]], [[0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 0], [2, 0, 0], [0, 0, 1], [1, 2, 2], [0, 0, 0], [1, 2, 2], [0, 0, 2], [1, 2, 0], [0, 0, 0], [2, 0, 2]], [[0, 0, 0], [1, 2, 0], [0, 2, 2], [1, 2, 1], [0, 0, 2], [1, 2, 2], [0, 0, 0], [1, 2, 1], [0, 0, 2], [0, 2, 0], [1, 2, 2]], [[0, 0, 2], [1, 2, 0], [0, 0, 0], [2, 0, 2], [0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 0], [2, 0, 0], [0, 0, 1], [1, 2, 2], [0, 0, 0], [1, 2, 2]], [[0, 2, 0], [1, 2, 1], [0, 2, 2], [1, 2, 1], [0, 2, 0], [2, 0, 2], [0, 2, 2], [1, 2, 2], [0, 2, 0], [1, 2, 0], [0, 2, 0], [2, 0, 0], [0, 2, 1], [1, 2, 0]], [[0, 0, 0], [1, 2, 1], [0, 0, 2], [1, 2, 1], [0, 0, 0], [2, 0, 0], [0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 0], [2, 0, 2], [0, 0, 1], [1, 2, 2]], [[0, 0, 0], [1, 2, 0], [0, 0, 0], [1, 2, 2], [2, 2, 0], [0, 0, 0], [2, 2, 1], [1, 2, 2], [2, 2, 0], [1, 2, 0], [2, 2, 0], [0, 0, 2], [2, 2, 2], [0, 0, 2]], [[0, 0, 1], [1, 0, 2], [2, 2, 0], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 2], [1, 0, 0], [0, 0, 1], [2, 0, 2], [1, 2, 0], [2, 0, 0]], [[0, 0, 0], [1, 2, 2], [0, 0, 2], [2, 2, 1], [1, 0, 2], [0, 2, 2], [1, 2, 0], [0, 2, 0], [1, 2, 2], [0, 2, 0], [1, 0, 0], [2, 2, 1]], [[0, 0, 1], [1, 0, 0], [2, 0, 0], [1, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 2], [1, 0, 2], [0, 0, 1], [2, 2, 2], [1, 2, 2], [2, 2, 0]], [[0, 0, 2], [1, 2, 0], [0, 0, 0], [2, 0, 1], [1, 0, 0], [0, 2, 0], [1, 2, 2], [0, 2, 2], [1, 2, 0], [0, 2, 2], [1, 0, 2], [2, 0, 1]], [[0, 0, 0], [1, 2, 1], [0, 0, 0], [1, 2, 2], [2, 2, 0], [0, 0, 0], [2, 2, 1], [1, 2, 2], [2, 2, 0], [1, 2, 0], [2, 2, 0], [0, 0, 2], [2, 2, 2], [1, 2, 2], [0, 0, 2]], [[0, 2, 1], [0, 0, 1], [1, 0, 2], [0, 2, 1], [0, 0, 1], [1, 2, 0], [0, 2, 0], [0, 0, 0], [2, 0, 1], [0, 2, 1], [0, 0, 1], [2, 2, 1], [0, 2, 0], [0, 0, 0], [1, 2, 1]], [[2, 0, 0], [0, 0, 2], [1, 2, 2], [0, 0, 0], [1, 2, 2], [0, 0, 2], [1, 2, 0], [0, 0, 0], [2, 0, 2], [0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 2, 2], [0, 0, 0], [2, 0, 0], [0, 0, 2], [2, 0, 2]], [[0, 2, 0], [1, 2, 2], [0, 0, 2], [1, 2, 1], [0, 2, 2], [1, 2, 0], [0, 0, 0], [0, 2, 0], [1, 2, 2], [0, 0, 2], [1, 2, 1], [0, 2, 2], [1, 2, 0], [0, 0, 0], [1, 2, 0]], [[0, 0, 0], [1, 2, 0], [0, 2, 2], [1, 2, 1], [0, 0, 2], [1, 2, 2], [0, 2, 0], [0, 0, 0], [1, 2, 0], [0, 2, 2], [1, 2, 1], [0, 0, 2], [1, 2, 2], [0, 2, 0], [1, 2, 2]], [[0, 0, 2], [2, 2, 0], [0, 0, 0], [2, 0, 0], [0, 0, 2], [2, 2, 2], [0, 0, 0], [2, 0, 1], [0, 2, 2], [2, 0, 0], [0, 2, 0], [2, 2, 2], [0, 2, 2], [2, 0, 2], [0, 2, 0]], [[0, 0, 2], [2, 2, 0], [0, 0, 0], [2, 0, 0], [0, 0, 2], [2, 2, 2], [0, 0, 0], [2, 0, 2], [0, 0, 2], [2, 2, 2], [0, 0, 0], [2, 0, 0], [0, 0, 2], [2, 2, 0], [0, 0, 0], [2, 0, 2]]],[[[2, 2, 0], [0, 0, 2], [2, 2, 0], [0, 2, 1], [2, 2, 2], [0, 0, 0], [2, 2, 0], [0, 2, 1], [2, 2, 1]], [[2, 2, 2], [0, 2, 2], [2, 2, 2], [0, 0, 1], [2, 2, 0], [0, 2, 0], [2, 2, 2], [0, 0, 1], [2, 2, 1]], [[2, 2, 1], [1, 2, 0], [2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 0], [1, 2, 2], [2, 2, 0], [1, 2, 0], [2, 2, 0]], [[2, 2, 2], [1, 2, 2], [2, 2, 2], [1, 2, 0], [2, 2, 2], [1, 2, 0], [2, 2, 2], [1, 2, 2], [2, 2, 0], [1, 2, 2], [2, 2, 1]], [[2, 0, 1], [2, 2, 1], [1, 0, 2], [2, 0, 1], [2, 2, 1], [1, 2, 1], [2, 0, 1], [2, 2, 1], [1, 0, 2], [2, 0, 1], [2, 2, 1]], [[2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 0], [0, 0, 2], [2, 2, 1], [1, 2, 2], [2, 2, 0], [1, 2, 2], [2, 2, 2], [1, 2, 0], [2, 2, 0], [0, 0, 0]], [[2, 2, 0], [1, 2, 0], [2, 0, 2], [1, 2, 1], [2, 2, 2], [1, 2, 2], [2, 2, 0], [1, 2, 1], [2, 2, 2], [2, 0, 0], [1, 2, 2]], [[2, 2, 2], [1, 2, 0], [2, 2, 0], [0, 0, 0], [2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 0], [0, 0, 2], [2, 2, 1], [1, 2, 2], [2, 2, 0], [1, 2, 2]], [[2, 0, 0], [1, 2, 1], [2, 0, 2], [1, 2, 1], [2, 0, 0], [0, 0, 0], [2, 0, 2], [1, 2, 2], [2, 0, 0], [1, 2, 0], [2, 0, 0], [0, 0, 2], [2, 0, 1], [1, 2, 0]], [[2, 2, 0], [1, 2, 1], [2, 2, 2], [1, 2, 1], [2, 2, 0], [0, 0, 2], [2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 0], [0, 0, 0], [2, 2, 1], [1, 2, 2]], [[2, 2, 0], [1, 2, 0], [2, 2, 0], [1, 2, 2], [0, 2, 2], [2, 2, 0], [0, 2, 1], [1, 2, 2], [0, 2, 2], [1, 2, 0], [0, 2, 2], [2, 2, 2], [0, 2, 0], [2, 2, 2]], [[2, 2, 1], [1, 0, 2], [0, 2, 2], [1, 2, 0], [0, 2, 2], [1, 2, 2], [0, 2, 0], [1, 0, 0], [2, 2, 1], [0, 0, 0], [1, 2, 0], [0, 0, 2]], [[2, 2, 0], [1, 2, 2], [2, 2, 2], [0, 2, 1], [1, 0, 2], [2, 0, 2], [1, 2, 0], [2, 0, 0], [1, 2, 2], [2, 0, 0], [1, 0, 0], [0, 2, 1]], [[2, 2, 1], [1, 0, 0], [0, 0, 2], [1, 2, 2], [0, 0, 2], [1, 2, 0], [0, 0, 0], [1, 0, 2], [2, 2, 1], [0, 2, 0], [1, 2, 2], [0, 2, 2]], [[2, 2, 2], [1, 2, 0], [2, 2, 0], [0, 0, 1], [1, 0, 0], [2, 0, 0], [1, 2, 2], [2, 0, 2], [1, 2, 0], [2, 0, 2], [1, 0, 2], [0, 0, 1]], [[2, 2, 0], [1, 2, 1], [2, 2, 0], [1, 2, 2], [0, 2, 2], [2, 2, 0], [0, 2, 1], [1, 2, 2], [0, 2, 2], [1, 2, 0], [0, 2, 2], [2, 2, 2], [0, 2, 0], [1, 2, 2], [2, 2, 2]], [[2, 0, 1], [2, 2, 1], [1, 0, 2], [2, 0, 1], [2, 2, 1], [1, 2, 0], [2, 0, 0], [2, 2, 0], [0, 0, 1], [2, 0, 1], [2, 2, 1], [0, 2, 1], [2, 0, 0], [2, 2, 0], [1, 2, 1]], [[0, 0, 2], [2, 2, 2], [1, 2, 2], [2, 2, 0], [1, 2, 2], [2, 2, 2], [1, 2, 0], [2, 2, 0], [0, 0, 0], [2, 2, 2], [1, 2, 0], [2, 2, 0], [1, 2, 2], [2, 2, 0], [0, 0, 2], [2, 2, 2], [0, 0, 0]], [[2, 0, 0], [1, 2, 2], [2, 2, 2], [1, 2, 1], [2, 0, 2], [1, 2, 0], [2, 2, 0], [2, 0, 0], [1, 2, 2], [2, 2, 2], [1, 2, 1], [2, 0, 2], [1, 2, 0], [2, 2, 0], [1, 2, 0]], [[2, 2, 0], [1, 2, 0], [2, 0, 2], [1, 2, 1], [2, 2, 2], [1, 2, 2], [2, 0, 0], [2, 2, 0], [1, 2, 0], [2, 0, 2], [1, 2, 1], [2, 2, 2], [1, 2, 2], [2, 0, 0], [1, 2, 2]], [[2, 2, 2], [0, 2, 2], [2, 2, 0], [0, 0, 2], [2, 2, 2], [0, 2, 0], [2, 2, 0], [0, 0, 1], [2, 0, 2], [0, 0, 2], [2, 0, 0], [0, 2, 0], [2, 0, 2], [0, 0, 0], [2, 0, 0]], [[2, 2, 2], [0, 2, 2], [2, 2, 0], [0, 0, 2], [2, 2, 2], [0, 2, 0], [2, 2, 0], [0, 0, 0], [2, 2, 2], [0, 2, 0], [2, 2, 0], [0, 0, 2], [2, 2, 2], [0, 2, 2], [2, 2, 0], [0, 0, 0]]]
]



print(f"{config.F2LSEQ[0][30]}")
print(f"{config.F2LSEQ[1][30]}")
print(f"{config.F2LSEQ[2][30]}")
print(f"{config.F2LSEQ[3][30]}")


"""
oldpointers = []

sames = 0
olds = 0
for i in range(4):
    for j in range(len(OLDPLLSEQ[i])):
        if OLDPLLSEQ[i][j] == config.PLLSEQ[i][j]:
            sames += 1
        else:
            oldpointers.append([i, j])
            olds += 1
print(sames)
print(olds)
print(oldpointers)
"""



"""
config.block = [[4, 1, 0], [1, 0], [5, 1, 0], [4, 1], [1], [5, 1], [4, 1, 2], [1, 2], [5, 1, 2], [4, 0], [0], [5, 0], [4], [], [5], [4, 2], [2], [5, 2], [5, 3, 2], [3, 0], [5, 3, 0], [4, 3], [3], [5, 3], [0, 3, 4], [3, 2], [2, 3, 4]]
for h in range(4):
    holderBlock = [[4, 1, 0], [1, 0], [5, 1, 0], [4, 1], [1], [5, 1], [4, 1, 2], [1, 2], [5, 1, 2], [4, 0], [0],
                    [5, 0], [4], [], [5], [4, 2], [2], [5, 2], [5, 3, 2], [3, 0], [5, 3, 0], [4, 3], [3], [5, 3],
                    [0, 3, 4], [3, 2], [2, 3, 4]]
    for i in range(len(config.PLLSEQ[h])):
        for j in range(len(config.PLLSEQ[h][i])):
            holderBlock = RBX_Cube.simMove(config.PLLSEQ[h][i][j][0], config.PLLSEQ[h][i][j][1], config.PLLSEQ[h][i][j][2], holderBlock)


        if holderBlock == config.solvedBlock:
            print(f"SOLVED {config.PLLSEQ[h][i]}")
            print(f" {h} {i}")
        else:
            print(f"F{config.PLLSEQ[h][i]}")
"""